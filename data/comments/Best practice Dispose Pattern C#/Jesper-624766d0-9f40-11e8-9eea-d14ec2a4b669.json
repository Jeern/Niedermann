{"_id":"624766d0-9f40-11e8-9eea-d14ec2a4b669","name":"Jesper","email":"ad62b4d7c02afdc2eb85410979c71283","body":"Well A short followup. Bill Wagners book also influenced my Dispose Pattern. I own it and read it with joy. The inheritance principle is the same I just make it explicit where to free managed and unmanaged code, which I think is better.\n\nIn my pattern I try to make the best pattern possible for all cases. I could make 10 patterns for 10 different cases instead, but that was not the point. You are right about not everything being multithreaded, well then just remove the lock in those cases :O) But it could become multithreaded in the future.\nIt would be the same as not using Transactions if you have only Database reads. You never know what the future will bring.\n\nYou are probably right about the Finalizer performance thing. But still the alternative is that your unmanaged resources have a chance of not being cleaned up. If you are correct and it has a serious impact, the best choice would be to remove the destructor when having no unmanaged resources. Would be nice to test this some day.","date":"2009-06-24T10:12:31.120641+02:00"}
